{"ast":null,"code":"/**\n * 网络请求配置\n */\nimport axios from \"axios\";\naxios.defaults.timeout = 100000;\naxios.defaults.baseURL = \" https://api.uomg.com\";\n/**\n * http request 拦截器\n */\n\naxios.interceptors.request.use(config => {\n  config.data = JSON.stringify(config.data);\n  config.headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n/**\n * http response 拦截器\n */\n\naxios.interceptors.response.use(response => {\n  if (response.data.errCode === 2) {\n    console.log(\"过期\");\n  }\n\n  return response;\n}, error => {\n  console.log(\"请求出错：\", error);\n});\n/**\n * 封装get方法\n * @param url  请求url\n * @param params  请求参数\n * @returns {Promise}\n */\n\nexport function getRequest(url) {\n  let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise((resolve, reject) => {\n    axios.get(url, {\n      params: params\n    }).then(response => {\n      resolve(response.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/alien/Desktop/checkQQ/my-app1/src/http/fetch.tsx"],"names":["axios","defaults","timeout","baseURL","interceptors","request","use","config","data","JSON","stringify","headers","error","Promise","reject","response","errCode","console","log","getRequest","url","params","resolve","get","then","catch"],"mappings":"AAAA;AACA;AACA;AACC,OAAOA,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,MAAzB;AACAF,KAAK,CAACC,QAAN,CAAeE,OAAf,GAAyB,uBAAzB;AAEA;AACD;AACA;;AACCH,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,MAAD,IAAY;AACVA,EAAAA,MAAM,CAACC,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACC,IAAtB,CAAd;AACAD,EAAAA,MAAM,CAACI,OAAP,GAAiB;AACf,oBAAgB;AADD,GAAjB;AAGA,SAAOJ,MAAP;AACD,CAPH,EAQGK,KAAD,IAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAVH;AAaA;AACD;AACA;;AACCZ,KAAK,CAACI,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACGS,QAAD,IAAc;AACZ,MAAIA,QAAQ,CAACP,IAAT,CAAcQ,OAAd,KAA0B,CAA9B,EAAiC;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AACD,SAAOH,QAAP;AACD,CANH,EAOGH,KAAD,IAAW;AACTK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;AACD,CATH;AAYA;AACD;AACA;AACA;AACA;AACA;;AACC,OAAO,SAASO,UAAT,CAAoBC,GAApB,EAA6C;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAClD,SAAO,IAAIR,OAAJ,CAAY,CAACS,OAAD,EAAUR,MAAV,KAAqB;AACtCd,IAAAA,KAAK,CAACuB,GAAN,CAAUH,GAAV,EAAe;AACXC,MAAAA,MAAM,EAAEA;AADG,KAAf,EAEKG,IAFL,CAEWT,QAAD,IAAc;AACpBO,MAAAA,OAAO,CAACP,QAAQ,CAACP,IAAV,CAAP;AACD,KAJH,EAKGiB,KALH,CAKUb,KAAD,IAAW;AAChBE,MAAAA,MAAM,CAACF,KAAD,CAAN;AACD,KAPH;AAQD,GATM,CAAP;AAUD","sourcesContent":["/**\n * 网络请求配置\n */\n import axios from \"axios\";\n\n axios.defaults.timeout = 100000;\n axios.defaults.baseURL = \" https://api.uomg.com\";\n\n /**\n  * http request 拦截器\n  */\n axios.interceptors.request.use(\n   (config) => {\n     config.data = JSON.stringify(config.data);\n     config.headers = {\n       \"Content-Type\": \"application/json\",\n     };\n     return config;\n   },\n   (error) => {\n     return Promise.reject(error);\n   }\n );\n \n /**\n  * http response 拦截器\n  */\n axios.interceptors.response.use(\n   (response) => {\n     if (response.data.errCode === 2) {\n       console.log(\"过期\");\n     }\n     return response;\n   },\n   (error) => {\n     console.log(\"请求出错：\", error);\n   }\n );\n \n /**\n  * 封装get方法\n  * @param url  请求url\n  * @param params  请求参数\n  * @returns {Promise}\n  */\n export function getRequest(url:string, params = {}) {\n   return new Promise((resolve, reject) => {\n     axios.get(url, {\n         params: params,\n       }).then((response) => {\n         resolve(response.data);\n       })\n       .catch((error) => {\n         reject(error);\n       });\n   });\n }\n \n\n \n "]},"metadata":{},"sourceType":"module"}